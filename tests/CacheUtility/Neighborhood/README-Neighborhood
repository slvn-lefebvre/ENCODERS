Neighborhood Utility Demo Instruction
=====================================

To test the basic neighborhood utility function, the linear topology is used as below:

A - B - C

A:

# busybox ifconfig usb0 10.0.0.10 broadcast 10.0.0.255 netmask 255.255.255.0 
# busybox route add default usb0

B:

# busybox ifconfig usb0 10.0.0.11 broadcast 10.0.0.255 netmask 255.255.255.0
# busybox route add default usb0

C:

# busybox ifconfig usb0 10.0.0.12 broadcast 10.0.0.255 netmask 255.255.255.0
# busybox route add default usb0

One-time Setup
--------------

1. Compile and install Haggle on Android phones.

2. Copy appropriate configuration files (config.xml.n1 for node A, config.xml.n2 for node B, config.xml.n3 for node C)
   to /data/data/org.haggle.kernel/files/config.xml

3. Compile and push the program "haggletest"
   to /data/ directory on the phones.

4. Copy scripts (app.n1.sh, app.n2.sh, app.n3.sh, validate.sh) to the /data/ on the phones.

Preparation
-----------

5. Before running the demo, you must make sure that Haggle has a clean slate.

6. Force quit any currently running instances of Haggle.

7. Remove the following files:

    /data/data/org.haggle.kernel/files/haggle.log
    /data/data/org.haggle.kernel/files/haggle.db
    /sdcard/haggle/*

8. Launch Haggle.

    am startservice -a android.intent.action.MAIN -n org.haggle.kernel/org.haggle.kernel.Haggle

Execute Test Scripts
--------------------

9. Node A publishes 2 DOs (1 small, 1 large)  

    cd /data
    bash app.n1.sh 

10. Node B subscribes for 2 DOs.  

    cd /data 
    bash app.n2.sh
 
11. Node C subscribes for large DO. 

    cd /data
    bash app.n3.sh 

12. Wait approx 45 seconds and check Node B's cache, which should have small DO due to neighborhood utility.   

    bash validate.sh 
